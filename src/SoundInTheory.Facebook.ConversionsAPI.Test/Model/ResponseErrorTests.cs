/*
 * Facebook Conversions API (for Web)
 *
 * The Conversions API (for web) allows advertisers to send web events from their servers directly to Facebook. Conversions API events are linked to a pixel and are processed like browser pixel events. This means that these conversion events are used in measurement, reporting, and optimization in the same way as browser pixel events.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: web_signals_integrations@fb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SoundInTheory.Facebook.ConversionsAPI.Api;
using SoundInTheory.Facebook.ConversionsAPI.Model;
using SoundInTheory.Facebook.ConversionsAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SoundInTheory.Facebook.ConversionsAPI.Test
{
    /// <summary>
    ///  Class for testing ResponseError
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ResponseErrorTests
    {
        // TODO uncomment below to declare an instance variable for ResponseError
        //private ResponseError instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ResponseError
            //instance = new ResponseError();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ResponseError
        /// </summary>
        [Test]
        public void ResponseErrorInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ResponseError
            //Assert.IsInstanceOf(typeof(ResponseError), instance);
        }


        /// <summary>
        /// Test the property 'Error'
        /// </summary>
        [Test]
        public void ErrorTest()
        {
            // TODO unit test for the property 'Error'
        }

    }

}
